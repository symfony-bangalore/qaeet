CREATE TABLE q_a (id BIGINT AUTO_INCREMENT, question TEXT, answer TEXT, type VARCHAR(255), best_id BIGINT, origin_id BIGINT, comment TEXT, reply_id BIGINT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by VARCHAR(128) NOT NULL, updated_by VARCHAR(128) NOT NULL, UNIQUE INDEX sluggable_idx (slug), INDEX root_id_idx (root_id), INDEX reply_id_idx (reply_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE q_a (id BIGINT AUTO_INCREMENT, question TEXT, answer TEXT, type VARCHAR(255), best_id BIGINT, origin_id BIGINT, comment TEXT, reply_id BIGINT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by VARCHAR(128) NOT NULL, updated_by VARCHAR(128) NOT NULL, INDEX q_a_type_idx (type), UNIQUE INDEX sluggable_idx (slug), INDEX root_id_idx (root_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE q_a (id BIGINT AUTO_INCREMENT, question TEXT, answer TEXT, type VARCHAR(255), best_id BIGINT, origin_id BIGINT, comment TEXT, reply_id BIGINT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by VARCHAR(128) NOT NULL, updated_by VARCHAR(128) NOT NULL, UNIQUE INDEX sluggable_idx (slug), INDEX root_id_idx (root_id), INDEX best_id_idx (best_id), INDEX origin_id_idx (origin_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE question_relation (from_id BIGINT, to_id BIGINT, PRIMARY KEY(from_id, to_id)) ENGINE = INNODB;
CREATE TABLE question_tag (question_id BIGINT, tag_id BIGINT, PRIMARY KEY(question_id, tag_id)) ENGINE = INNODB;
CREATE TABLE tag (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, slug VARCHAR(255), UNIQUE INDEX sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id INT AUTO_INCREMENT, user_id INT NOT NULL, email VARCHAR(80), fullname VARCHAR(80), validate VARCHAR(17), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE q_a ADD CONSTRAINT q_a_root_id_q_a_id FOREIGN KEY (root_id) REFERENCES q_a(id);
ALTER TABLE q_a ADD CONSTRAINT q_a_reply_id_q_a_id FOREIGN KEY (reply_id) REFERENCES q_a(id);
ALTER TABLE q_a ADD CONSTRAINT q_a_origin_id_q_a_id FOREIGN KEY (origin_id) REFERENCES q_a(id);
ALTER TABLE q_a ADD CONSTRAINT q_a_best_id_q_a_id FOREIGN KEY (best_id) REFERENCES q_a(id);
ALTER TABLE question_relation ADD CONSTRAINT question_relation_from_id_q_a_id FOREIGN KEY (from_id) REFERENCES q_a(id);
ALTER TABLE question_tag ADD CONSTRAINT question_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id);
ALTER TABLE question_tag ADD CONSTRAINT question_tag_question_id_q_a_id FOREIGN KEY (question_id) REFERENCES q_a(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
