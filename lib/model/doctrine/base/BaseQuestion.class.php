<?php

/**
 * BaseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $question
 * @property string $answer
 * @property integer $best_id
 * @property integer $branch_id
 * @property integer $author_id
 * @property Answer $BestAnswer
 * @property Answer $BranchedAnswer
 * @property Doctrine_Collection $Related
 * @property sfGuardUserProfile $Author
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $Answers
 * 
 * @method string              getQuestion()       Returns the current record's "question" value
 * @method string              getAnswer()         Returns the current record's "answer" value
 * @method integer             getBestId()         Returns the current record's "best_id" value
 * @method integer             getBranchId()       Returns the current record's "branch_id" value
 * @method integer             getAuthorId()       Returns the current record's "author_id" value
 * @method Answer              getBestAnswer()     Returns the current record's "BestAnswer" value
 * @method Answer              getBranchedAnswer() Returns the current record's "BranchedAnswer" value
 * @method Doctrine_Collection getRelated()        Returns the current record's "Related" collection
 * @method sfGuardUserProfile  getAuthor()         Returns the current record's "Author" value
 * @method Doctrine_Collection getTags()           Returns the current record's "Tags" collection
 * @method Doctrine_Collection getAnswers()        Returns the current record's "Answers" collection
 * @method Question            setQuestion()       Sets the current record's "question" value
 * @method Question            setAnswer()         Sets the current record's "answer" value
 * @method Question            setBestId()         Sets the current record's "best_id" value
 * @method Question            setBranchId()       Sets the current record's "branch_id" value
 * @method Question            setAuthorId()       Sets the current record's "author_id" value
 * @method Question            setBestAnswer()     Sets the current record's "BestAnswer" value
 * @method Question            setBranchedAnswer() Sets the current record's "BranchedAnswer" value
 * @method Question            setRelated()        Sets the current record's "Related" collection
 * @method Question            setAuthor()         Sets the current record's "Author" value
 * @method Question            setTags()           Sets the current record's "Tags" collection
 * @method Question            setAnswers()        Sets the current record's "Answers" collection
 * 
 * @package    qaeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseQuestion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('question');
        $this->hasColumn('question', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('answer', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('best_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('branch_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Answer as BestAnswer', array(
             'local' => 'best_id',
             'foreign' => 'id'));

        $this->hasOne('Answer as BranchedAnswer', array(
             'local' => 'branch_id',
             'foreign' => 'id'));

        $this->hasMany('Question as Related', array(
             'refClass' => 'QuestionRelation',
             'local' => 'from_id',
             'foreign' => 'to_id',
             'equal' => true));

        $this->hasOne('sfGuardUserProfile as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasMany('Tag as Tags', array(
             'refClass' => 'QuestionTag',
             'local' => 'question_id',
             'foreign' => 'tag_id'));

        $this->hasMany('Answer as Answers', array(
             'local' => 'id',
             'foreign' => 'question_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}