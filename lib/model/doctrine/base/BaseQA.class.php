<?php

/**
 * BaseQA
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $question
 * @property string $answer
 * @property string $type
 * @property integer $best_id
 * @property integer $origin_id
 * @property string $comment
 * @property integer $reply_id
 * @property QA $Root
 * @property Doctrine_Collection $QA
 * @property Doctrine_Collection $Replies
 * 
 * @method string              getQuestion()  Returns the current record's "question" value
 * @method string              getAnswer()    Returns the current record's "answer" value
 * @method string              getType()      Returns the current record's "type" value
 * @method integer             getBestId()    Returns the current record's "best_id" value
 * @method integer             getOriginId()  Returns the current record's "origin_id" value
 * @method string              getComment()   Returns the current record's "comment" value
 * @method integer             getReplyId()   Returns the current record's "reply_id" value
 * @method QA                  getRoot()      Returns the current record's "Root" value
 * @method Doctrine_Collection getQA()        Returns the current record's "QA" collection
 * @method Doctrine_Collection getReplies()   Returns the current record's "Replies" collection
 * @method QA                  setQuestion()  Sets the current record's "question" value
 * @method QA                  setAnswer()    Sets the current record's "answer" value
 * @method QA                  setType()      Sets the current record's "type" value
 * @method QA                  setBestId()    Sets the current record's "best_id" value
 * @method QA                  setOriginId()  Sets the current record's "origin_id" value
 * @method QA                  setComment()   Sets the current record's "comment" value
 * @method QA                  setReplyId()   Sets the current record's "reply_id" value
 * @method QA                  setRoot()      Sets the current record's "Root" value
 * @method QA                  setQA()        Sets the current record's "QA" collection
 * @method QA                  setReplies()   Sets the current record's "Replies" collection
 * 
 * @package    qa
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseQA extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('q_a');
        $this->hasColumn('question', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('answer', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('best_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('origin_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('reply_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->setSubClasses(array(
             'Question' => 
             array(
              'type' => 1,
             ),
             'Answer' => 
             array(
              'type' => 2,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('QA as Root', array(
             'local' => 'root_id',
             'foreign' => 'id'));

        $this->hasMany('QA', array(
             'local' => 'id',
             'foreign' => 'root_id'));

        $this->hasMany('Answer as Replies', array(
             'local' => 'id',
             'foreign' => 'reply_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'slugFromTitle',
             ),
             'canUpdate' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $doctrine_template_blameable0 = new Doctrine_Template_Blameable(array(
             'listener' => 'Doctrine_Template_Listener_Blameable_sfGuard',
             'columns' => 
             array(
              'created' => 
              array(
              'type' => 'string',
              'length' => 128,
              ),
              'updated' => 
              array(
              'type' => 'string',
              'length' => 128,
              ),
             ),
             ));
        $this->actAs($nestedset0);
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
        $this->actAs($doctrine_template_blameable0);
    }
}